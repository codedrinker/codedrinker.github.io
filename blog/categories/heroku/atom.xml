<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Heroku | 码匠笔记]]></title>
  <link href="http://www.majiang.life/blog/categories/heroku/atom.xml" rel="self"/>
  <link href="http://www.majiang.life/"/>
  <updated>2018-05-10T23:51:48+08:00</updated>
  <id>http://www.majiang.life/</id>
  <author>
    <name><![CDATA[麻酱]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Heroku 教程：MySQL 中文乱码]]></title>
    <link href="http://www.majiang.life/blog/fix-heroku-cleardb-mysql-chinese-messy-code/"/>
    <updated>2018-05-01T16:03:01+08:00</updated>
    <id>http://www.majiang.life/blog/fix-heroku-cleardb-mysql-chinese-messy-code</id>
    <content type="html"><![CDATA[<h2>方案</h2>

<p>Heroku 的 MySQL 默认就是 UTF-8字符集，本身不应该出现乱码，但是笔者在测试过程中出现中文乱码。<br/>
解决方法非常简单，直接在配置的URL后面添加如下内容即可。
<code>
&amp;useUnicode=true&amp;characterEncoding=UTF-8
</code>
不过在添加之前需要查看一下当前URL格式。</p>

<pre><code>heroku run echo \$JDBC_DATABASE_URL
</code></pre>

<p>输出内容如下
<code>
jdbc:mysql://endpoint/database?reconnect=true&amp;user=username&amp;password=password
</code>
所以我直接在后面追加<code>&amp;useUnicode=true&amp;characterEncoding=UTF-8</code>即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Heroku 教程：自定义域名配置 HTTPS]]></title>
    <link href="http://www.majiang.life/blog/setting-up-ssl-on-heroku-with-custom-domain/"/>
    <updated>2018-04-30T08:42:05+08:00</updated>
    <id>http://www.majiang.life/blog/setting-up-ssl-on-heroku-with-custom-domain</id>
    <content type="html"><![CDATA[<h2>起源</h2>

<p>本身 Heroku 的 app 域名是开始 SSL 的，但是因为他的域名为 appname.herokuapp.com，没有在国内备案，所以我们需要绑定一个国内备案的域名到 Heroku 上面。于是就有了下面的文章。</p>

<!-- more -->


<h2>获取 SSL 证书</h2>

<p>可以直接使用一些服务商购买域名 SSL 证书，或者用其他的方式自己生成。下面我们讲解一下怎么生成。</p>

<h3>生成私有 Key</h3>

<table>
<thead>
<tr>
<th>系统  </th>
<th> 安装方式</th>
</tr>
</thead>
<tbody>
<tr>
<td>Mac OS X </td>
<td> Homebrew: <code>brew install openssl</code></td>
</tr>
<tr>
<td>Windows   </td>
<td> <a href="http://slproweb.com/products/Win32OpenSSL.html">Windows complete package .exe installer</a></td>
</tr>
<tr>
<td>Ubuntu Linux </td>
<td> <code>apt-get install openssl</code></td>
</tr>
</tbody>
</table>


<p>Heroku 只支持 RSA，下面我们直接运行命令
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openssl genrsa -des3 -out server.pass.key 2048&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;输入如下命令获取<span class="sb">`</span>server.key<span class="sb">`</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;openssl rsa -in server.pass.key -out server.key
</span></code></pre></td></tr></table></div></figure></p>

<h3>生成 CSR</h3>

<p>CSR是证书签名请求，需要使用上一步生成的私有 Key 进行生成。这个时候需要输入 Country Name 和 Common Name，格式如下</p>

<table>
<thead>
<tr>
<th>字段  </th>
<th> 内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>Country Name    </td>
<td> <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166</a> 格式的简码</td>
</tr>
<tr>
<td>Common Name  </td>
<td> www.example.com,*.example.com 需要注意的是这个名字必须和使用的保持一致</td>
</tr>
</tbody>
</table>


<p>输入如下命令生成 CSR
<code>
openssl req -nodes -new -key server.key -out server.csr
</code></p>

<h3>生成 CRT</h3>

<p>CRT 一般都是找签发 SSL 的机构签发，大部分是收费的，也有免费的，如果不找 SSL 机构签发，可以按照下面的方式自己生成，不过自己生成的证书可以使用，只是默认是不信任的，需要用户自己认证。通常情况生成的证书为 CRT 或者 PEM格式的。</p>

<pre><code class="bash">openssl req -new -x509 -key server.key -out ca.crt -days 3650
</code></pre>

<p>这个证书用来给自己的证书签名，下面是创建服务器证书
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openssl x509 -req -days <span class="m">3650</span> -in server.csr -CA ca.crt -CAkey server.key -CAcreateserial -out server.crt&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;
</span><span class='line'>笔者购买的是阿里云的域名，其默认支持生成3个免费的域名，而且使用他的生成，默认是信任的。直接通过阿里云控制台生成然后下载使用即可，可以省略上面的步骤。
</span><span class='line'>
</span><span class='line'><span class="c">## 配置 Heroku</span>
</span><span class='line'><span class="c">### 创建插件</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;heroku addons:create ssl:endpoint
</span></code></pre></td></tr></table></div></figure></p>

<h3>添加证书</h3>

<pre><code>heroku certs:add server.crt server.key --type endpoint
</code></pre>

<p>运行完命令会为你分配一个新的 SSL 域名，需要你后面做绑定使用。
<code>
appname now served by iiii-65701.herokussl.com
</code></p>

<h3>修改证书</h3>

<p>如果后面更新了证书，可以使用如下命令修改证书。
<code>
heroku certs:update server.crt server.key --endpoint example-2121.herokussl.com
</code></p>

<h2>配置域名</h2>

<h3>添加域名</h3>

<p>直接使用如下命令配置刚才你输入的域名
<code>
heroku domains:add www.example.com
</code>
如果是配置域名，更多详情可以参照<br/>
<a href="/blog/heroku-custom-domains/?utm_source=rel">Heroku 教程：绑定自定义域名</a></p>

<h3>配置DNS</h3>

<p>这个时候需要配置一下 DNS 创建一个 CNAME 指向 Heroku，这个时候就需要指向到我们刚才生成的,<code>iiii-65701.herokussl.com</code>。</p>

<h2>验证</h2>

<p>等待一会儿以后可以使用如下命令检测一下是否配置成功
<code>
curl -kvI https://www.example.com
* About to connect() to www.example.com port 443 (#0)
*   Trying 50.16.234.21... connected
* Connected to www.example.com (50.16.234.21) port 443 (#0)
* SSLv3, TLS handshake, Client hello (1):
* SSLv3, TLS handshake, Server hello (2):
* SSLv3, TLS handshake, CERT (11):
* SSLv3, TLS handshake, Server finished (14):
* SSLv3, TLS handshake, Client key exchange (16):
* SSLv3, TLS change cipher, Client hello (1):
* SSLv3, TLS handshake, Finished (20):
* SSLv3, TLS change cipher, Client hello (1):
* SSLv3, TLS handshake, Finished (20):
* SSL connection using AES256-SHA
* Server certificate:
*    subject: C=US; ST=CA; L=SF; O=SFDC; OU=Heroku; CN=www.example.com
*    start date: 2011-11-01 17:18:11 GMT
*    expire date: 2012-10-31 17:18:11 GMT
*    common name: www.example.com (matched)
*    issuer: C=US; ST=CA; L=SF; O=SFDC; OU=Heroku; CN=www.heroku.com
*    SSL certificate verify ok.
GET / HTTP/1.1
User-Agent: curl/7.19.7 (universal-apple-darwin10.0) libcurl/7.19.7 OpenSSL/0.9.8r zlib/1.2.3
Host: www.example.com
Accept: */*
...
</code></p>

<h2>参考文档</h2>

<p><a href="https://devcenter.heroku.com/articles/ssl-endpoint#acquire-ssl-certificate">Heroku 官方配置</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何使用 Heroku 搭建免费的微信小程序服务]]></title>
    <link href="http://www.majiang.life/blog/how-to-set-up-mini-programs-free-server-using-heroku/"/>
    <updated>2018-04-30T08:42:05+08:00</updated>
    <id>http://www.majiang.life/blog/how-to-set-up-mini-programs-free-server-using-heroku</id>
    <content type="html"><![CDATA[<h2>起源</h2>

<p>最近小程序愈发的火热，好多人都纷纷的加入到小程序的开发阵营。虽然小程序的开发对个人用户是免费的，但是还是有一些要求的，比如需要服务器支持，购买域名，并且需要 HTTPS 支持，那么这样对于一些想学习小程序开发，或者是做一些开源的小程序工具的开发者来说，购买域名，服务器，HTTPS搭建都是额外的成本。虽然腾讯云提供了免费的调试环境，但是生成环境还是需要购买的。这里小编就来给搭建提供一种免费搭建小程序服务的方式。</p>

<!-- more -->


<h2>简介</h2>

<p>Heroku是一个支持多种编程语言的云平台即服务。在2010年被Salesforce.com收购。Heroku作为最开始的云平台之一，从2007年6月起开发，当时它仅支持Ruby，但后来增加了对Java、Node.js、Scala、Clojure、Python以及PHP和Perl的支持。基础操作系统是Debian，在最新的堆栈则是基于Debian的Ubuntu。</p>

<p>这样一下自己就解决问题，Heroku 作为PaaS 支持各种语言，同时他默认支持 HTTPS。乍一看他不也是 PaaS 吗，肯定也需要收费啊。为什么博主说不收费呢？ <br/>
那么我们看一下他的官方介绍。他提供起初的免费版本，他是<code>512 MB RAM │ 1 web/1 worker</code>，每个月提供免费的1000个小时，如果你超过1000个小时就不提供服务了，不过我们粗略的计算一下，1x24x30=720，按照30天计算的话才720小时，加上免费的版本还有一个特性，30分钟没有人使用就自动休眠，下次访问的时候自动启动，休眠期间不计入时间。这样对于刚刚小程序起步的我们已经足够了，并且你可以做好几个小程序的服务呢。</p>

<h2>注册</h2>

<p>直接去官网注册即可。<a href="https://www.heroku.com">https://www.heroku.com</a></p>

<h2>搭建</h2>

<p>进入 <a href="https://devcenter.heroku.com/">https://devcenter.heroku.com/</a> 页面，即可选择对应的语言进行开发。<br/>
英文不是很好的小伙伴可能有点吃力，因为这个是纯外文的。不过笔者也整理了一个中文的搭建过程，希望可以帮到大家。<br/>
<a href="/blog/heroku-get-started/?utm_source=inner">Heroku 入门教程之：使用 Heroku 快速搭建站点</a></p>

<h2>配置 HTTPS</h2>

<p>本身 heroku 免费提供的域名没有在国内备案，所以你需要自己把一个已经备案好的域名指定到 Heroku 空间，同时配置好 HTTPS，详情参考<br/>
<a href="/blog/setting-up-ssl-on-heroku-with-custom-domain/?utm_source=inner">Heroku 教程：自定义域名配置 HTTPS</a></p>

<h2>实例</h2>

<p>官方提供的 JAVA 例子好多东西都自己集成，笔者结合官方的例子自己写了一个，增加了 Spring，MyBatis，MySQL，H2，Migration的支持。如果有需要的可以自取。<br/>
<a href="https://github.com/codedrinker/heroku-spring-boot-mybatis-mysql-flyway-example">https://github.com/codedrinker/heroku-spring-boot-mybatis-mysql-flyway-example</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Commenthub —— 多说、网易云跟帖的替代品]]></title>
    <link href="http://www.majiang.life/blog/octopress-and-hexo-comments-widget/"/>
    <updated>2018-02-19T20:57:35+08:00</updated>
    <id>http://www.majiang.life/blog/octopress-and-hexo-comments-widget</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>“多说”和“网易云跟帖”相继不维护了，每一次给大家带来了希望又带来了失望，于是 <a href="https://github.com/codedrinker/commenthub">Commenthub</a> 出现了。Commenthub 是作者使用免费的服务 Heroku 和 Github Issues 结合起来做的一套开源的评论系统。其灵感源于 Gitment，但是 Gitment 的 Key 和 Secret 都存在浏览器端，这样对于安全也是一个问题，于是作者使用 Heroku 搭建后端服务用于处理业务和存储证书，通过 iframe 实现评论功能。</p>

<!-- more -->


<h2>效果图</h2>

<p><img src="/images/posts/commenthub1.png" alt="Demo" /></p>

<h2>演示地址</h2>

<p><a href="http://commenthub.github.io/">http://commenthub.github.io/</a></p>

<h2>功能介绍</h2>

<p>Commenthub 目前只支持 Github 用户登录评论，同时也只支持 Github 用户为自己的博客添加评论功能。目前 Commenthub 支持 Markdown 语法，表情，手机和PC响应式布局。</p>

<h2>Octopress 接入</h2>

<h3>注册 commenthub 账号</h3>

<p>访问 <a href="http://commenthub.herokuapp.com/">Commenthub官网</a>，点击 Sign up，使用 Github 账号登录成功以后，点击 Set up，填写博客地址。同时记住 ID，后面需要使用。</p>

<h3>配置 config.yml</h3>

<p>在 config.yml 里面填写 commenthub_id，其内容就是上面说的ID，用于标记作者是谁。
<code>
commenthub_id: 3821949
</code></p>

<h3>配置显示位置</h3>

<p>在 <code>_layouts/post.html</code> 的 article 标签下面添加如下代码，用来告诉 Commenthub，在什么地方显示评论功能。
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% if site.commenthub_id and page.comments == true %}
</span><span class='line'>  <span class="nt">&lt;section&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>评论<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;commenthub_thread&quot;</span> <span class="na">aria-live=</span><span class="s">&quot;polite&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>{% endif %}
</span></code></pre></td></tr></table></div></figure></p>

<h3>创建 commenthub.html</h3>

<p>创建 <code>includes/commenthub.html</code>，填入如下内容
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% comment %} Load script if commenthub comments are enabled and <span class="nt">&lt;code&gt;</span>page.comments<span class="nt">&lt;/code&gt;</span> is either empty (index) or set to true {% endcomment %}
</span><span class='line'>{% if site.commenthub_id and page.comments != false %}<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">commenthub_id</span> <span class="o">=</span> <span class="s1">&#39;{{ site.commenthub_id }}&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">commenthub_website</span> <span class="o">=</span> <span class="s1">&#39;{{ site.url }}&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">commenthub_identifier</span> <span class="o">=</span> <span class="s1">&#39;{{ page.url }}&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">commenthub_url</span> <span class="o">=</span> <span class="s1">&#39;{{ site.url }}{{ page.url }}&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">commenthub_title</span> <span class="o">=</span> <span class="s1">&#39;{{ page.title }}&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">dsq</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">dsq</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s1">&#39;text/javascript&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="nx">dsq</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>        <span class="nx">dsq</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="s1">&#39;https://commenthub.herokuapp.com/js/embed.js&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">dsq</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}());</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>{% endif %}
</span></code></pre></td></tr></table></div></figure></p>

<h3>引入 commenthub.html</h3>

<p>在 <code>includes/after_foot.html</code> 里面添加一行如下内容，用于引入 commenthub.html 文件
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% include commenthub.html %}
</span></code></pre></td></tr></table></div></figure></p>

<h3>完成</h3>

<p>这样 Octopress 的配置就结束了，如果配置中遇到问题，可以在当前博客中评论留言，或者到 Github Issue 中留言。</p>

<h2>Hexo 接入</h2>

<p>Hexo 使用的是比较热门的主题 Next。</p>

<h3>注册 commenthub 账号</h3>

<p>同上</p>

<h3>配置 config.yml</h3>

<p>配置 <code>themes/next/_config.yml</code> 文件，在里面的 Disqus 后面配置如下内容
<code>
commenthub:
  enable: true
  id: your_id
  site: your_website_url
</code></p>

<h3>配置显示位置</h3>

<p>在<code>themes/next/layout/_partials/comments.swig</code>里面添加一行代码，记得注意看<code>elseif</code>的位置
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  {% elseif theme.commenthub.enable %}
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;comments&quot;</span> <span class="na">id=</span><span class="s">&quot;comments&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;commenthub_thread&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3>创建 commenthub.swig</h3>

<p>创建新文件<code>themes/next/layout/_third-party/comments/commenthub.swig</code>并贴入如下代码，如下代码主要是用于加载和生成评论的逻辑。
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% if not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname %}
</span><span class='line'>  {% if theme.commenthub.enable %}
</span><span class='line'>      <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">commenthub_id</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;{{</span> <span class="nx">theme</span><span class="p">.</span><span class="nx">commenthub</span><span class="p">.</span><span class="nx">id</span> <span class="p">}}</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">commenthub_website</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;{{</span> <span class="nx">theme</span><span class="p">.</span><span class="nx">commenthub</span><span class="p">.</span><span class="nx">site</span> <span class="p">}}</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">commenthub_identifier</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;{{</span> <span class="nx">page</span><span class="p">.</span><span class="nx">path</span> <span class="p">}}</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">commenthub_url</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;{{</span> <span class="nx">page</span><span class="p">.</span><span class="nx">permalink</span> <span class="p">}}</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">commenthub_title</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;{{</span> <span class="nx">page</span><span class="p">.</span><span class="nx">title</span><span class="o">|</span> <span class="nx">addslashes</span> <span class="p">}}</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">dsq</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">script</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span>
</span><span class='line'>            <span class="nx">dsq</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">text</span><span class="o">/</span><span class="nx">javascript</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span>
</span><span class='line'>            <span class="nx">dsq</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>            <span class="nx">dsq</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="nx">a</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;https://commenthub.herokuapp.com/js/embed.js&quot;</span><span class="o">&gt;</span><span class="nx">https</span><span class="o">:</span><span class="c1">//commenthub.herokuapp.com/js/embed.js&lt;/a&gt;&amp;rsquo;;</span>
</span><span class='line'>            <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">head</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">body</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;)[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">dsq</span><span class="p">);</span>
</span><span class='line'>      <span class="nt">&lt;/script&gt;</span>
</span><span class='line'>  {% endif %}
</span><span class='line'>{% endif %}
</span></code></pre></td></tr></table></div></figure></p>

<h3>引入 commenthub.swig</h3>

<p>在<code>themes/next/layout/_third-party/comments/index.swig</code>文件添加如下代码：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% include <span class="ni">&amp;lsquo;</span>commenthub.swig<span class="ni">&amp;rsquo;</span> %}<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3>完成</h3>

<p>这样 Hexo 的配置就结束了，如果配置中遇到问题，可以在当前博客中评论留言，或者到 Github Issue 中留言。</p>

<h2>建议与反馈</h2>

<p>如果在使用过程中有任何问题欢迎建议和反馈到 <a href="https://github.com/codedrinker/commenthub">Commenthub</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Heroku 教程：绑定自定义域名]]></title>
    <link href="http://www.majiang.life/blog/heroku-custom-domains/"/>
    <updated>2018-02-18T18:50:38+08:00</updated>
    <id>http://www.majiang.life/blog/heroku-custom-domains</id>
    <content type="html"><![CDATA[<h2>简介</h2>

<p>Heroku 会提供一个默认的域名，即[name of app].herokuapp.com，如果你不喜欢可以绑定自己的域名。</p>

<!-- more -->


<h2>绑定</h2>

<p>绑定方式比较简单，直接修改 DNS 指向到 Heroku，然后配置Heroku 即可。</p>

<h3>修改 DNS</h3>

<p>在 Heroku 项目目录使用 <code>heroku domains</code> 命令查看当前项目的域名，为 DNS 添加 CNAME 指向到该域名。</p>

<h3>配置 Heroku</h3>

<p>使用 <code>heroku domains:add</code> 命令添加域名到 Heroku，然后等待即可。更多详细内容直接参照 <a href="https://devcenter.heroku.com/articles/custom-domains">官方文档</a></p>

<h2>参考文献</h2>

<p><a href="https://devcenter.heroku.com/articles/custom-domains">https://devcenter.heroku.com/articles/custom-domains</a></p>
]]></content>
  </entry>
  
</feed>
