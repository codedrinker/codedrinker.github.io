<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Heroku | 码匠笔记]]></title>
  <link href="http://www.majiang.life/blog/categories/heroku/atom.xml" rel="self"/>
  <link href="http://www.majiang.life/"/>
  <updated>2018-02-19T22:25:52+08:00</updated>
  <id>http://www.majiang.life/</id>
  <author>
    <name><![CDATA[麻酱]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Heroku 入门教程之：绑定自定义域名]]></title>
    <link href="http://www.majiang.life/blog/heroku-custom-domains/"/>
    <updated>2018-02-18T18:50:38+08:00</updated>
    <id>http://www.majiang.life/blog/heroku-custom-domains</id>
    <content type="html"><![CDATA[<h2>简介</h2>

<p>Heroku 会提供一个默认的域名，即[name of app].herokuapp.com，如果你不喜欢可以绑定自己的域名。</p>

<!-- more -->


<h2>绑定</h2>

<p>绑定方式比较简单，直接修改 DNS 指向到 Heroku，然后配置Heroku 即可。</p>

<h3>修改 DNS</h3>

<p>在 Heroku 项目目录使用 <code>heroku domains</code> 命令查看当前项目的域名，为 DNS 添加 CNAME 指向到该域名。</p>

<h3>配置 Heroku</h3>

<p>使用 <code>heroku domains:add</code> 命令添加域名到 Heroku，然后等待即可。更多详细内容直接参照 <a href="https://devcenter.heroku.com/articles/custom-domains">官方文档</a></p>

<h2>参考文献</h2>

<p><a href="https://devcenter.heroku.com/articles/custom-domains">https://devcenter.heroku.com/articles/custom-domains</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Heroku 入门教程之：使用 Heroku 快速搭建站点]]></title>
    <link href="http://www.majiang.life/blog/heroku-get-started/"/>
    <updated>2018-02-18T17:49:25+08:00</updated>
    <id>http://www.majiang.life/blog/heroku-get-started</id>
    <content type="html"><![CDATA[<h2>简介</h2>

<p>Heroku 是 Salesforce 旗下云服务商，提供方便便捷的各种云服务，如服务器，数据库，监控，计算等等。并且他提供了免费版本，这使得我们这些平时想搞一些小东西的人提供了莫大的便捷，虽然他有时长和宕机的限制，但是对于个人小程序来说已经足够了。</p>

<!-- more -->


<h2>快速入门</h2>

<h3>注册账号</h3>

<p>进入 <a href="https://www.heroku.com">Heroku 官网</a>，因为 Heroku 是国外的站点，所以需要提前准备好翻墙。点击 Sign Up，根据要求填写好信息。这里需要注意的是，国内大部分的邮箱不支持，所以这里提前准备好 gmail 邮箱进行注册。</p>

<h3>创建 App</h3>

<p>Heroku 提供了便捷的网页控制台和终端，登录成功后我们直接进入 Heroku 的网页控制台，选择我们熟悉的语言进行创建，我们这里选择两种方式进行介绍，PHP 和 Java。</p>

<h4>PHP</h4>

<h5>准备</h5>

<p>点击按钮以后进入开始界面，界面提示我们需要提前安装好 <a href="http://php.net/">PHP</a> 和 <a href="https://getcomposer.org/doc/00-intro.md">Composer</a>，使用 PHP 的朋友就不需要更多的介绍了，直接点击 <code>I'm ready to start</code>。</p>

<h5>Set up</h5>

<p>下载 Heroku CLI，这是 Heroku 的命令行工具，下载以后可以使用命令行直接进行代码更新和部署等操作，当然下文也会介绍更方便的部署方式。下载成功以后使用 <code>heroku login</code> 命令，输入邮箱和密码进行登录。</p>

<h5>准备项目</h5>

<p>如果我们没有项目，可以直接使用如下命令下载项目源码，然后部署项目。
<code>
git clone https://github.com/heroku/php-getting-started.git sesamepaste
</code>
后面跟随的 sesamepaste 是我将来的项目名称，然后进入项目
<code>
cd sesamepaste
</code></p>

<h5>创建App</h5>

<p>这里说的 App 不再是我们本地的项目，我们目前可以简单理解为 Heroku 的一个用来存放我们项目的容器，只有先有了这个容器才能部署我们的项目。运行如下命令创建，其中 sesamepaste 是项目的名称，也是 Heroku 的唯一标识，后面我们运行成功了，也需要使用 sesamepaste.herokuapp.com 来访问 App。<br/>
<code>sh
 heroku create sesamepaste
</code>
创建成功以后运行如下命令部署，其实就是把代码push 到 Heroku 的仓库，它会帮助我们自动化部署。
<code>sh
git push heroku master
</code>
最后使用 <code>heroku open</code> 命令就可以打开我们部署好的网站了。</p>

<h4>Java</h4>

<p>其他步骤和上面一样，除了项目地址，如下地址不是官方的例子，是笔者添加了一些spring，mybatis，flyway等集成的版本。
<code>
https://github.com/codedrinker/heroku-spring-boot-mybatis-mysql-flyway-example.git sesamepaste
</code></p>

<h4>其他</h4>

<p>如果是其他语言直接访问 Heroku帮助页面，<a href="https://devcenter.heroku.com">https://devcenter.heroku.com</a></p>

<h2>简单介绍</h2>

<h3>日志</h3>

<p>每次运行命令需要进入当前项目的目录，必要的时候需要输入 <code>heroku login</code>，使用 <code>heroku logs --tail</code> 命令实施查看输出日志。</p>

<h3>Procfile</h3>

<p>你会发现拉取下来的代码里面有名字是 Procfile 的文件，这文件是用来定义运行项目时候的命令，默认如下，表示使用apache 运行 web项目，目录是web。
<code>
web: vendor/bin/heroku-php-apache2 web/
</code></p>

<h3>关联 Github</h3>

<p>上文说到需要 push 到 heroku 的仓库才能部署，heroku 提供了更强带的功能，直接关联 Github 的仓库的分支，等分支有新内容更新的时候直接部署。这个配置就需要去 web控制台配置了。进入项目，点击 <code>Deploy</code>，勾选 <code>Github</code>，然后完成配置即可。</p>

<h2>相关文章</h2>

<p><a href="/blog/heroku-custom-domains/">Heroku 入门教程之：绑定自定义域名</a></p>
]]></content>
  </entry>
  
</feed>
