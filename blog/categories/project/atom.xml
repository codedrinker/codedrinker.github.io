<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Project | 码匠笔记]]></title>
  <link href="http://www.majiang.life/blog/categories/project/atom.xml" rel="self"/>
  <link href="http://www.majiang.life/"/>
  <updated>2018-07-01T09:03:15+08:00</updated>
  <id>http://www.majiang.life/</id>
  <author>
    <name><![CDATA[麻酱]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[notepad.cc 替代品——在线 Markdown 笔记]]></title>
    <link href="http://www.majiang.life/blog/online-markdown-note-replace-notepad-dot-cc/"/>
    <updated>2018-07-01T08:43:42+08:00</updated>
    <id>http://www.majiang.life/blog/online-markdown-note-replace-notepad-dot-cc</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>方便简洁的 notepad.cc 关闭，对于喜欢使用不需要登录，又简单的云存储工具的我们是一个损失，于是笔者就自己写了一个。PS:不需要担心再次关闭，因为作者几乎使用的免费的工具来实现：<br/>
1. Github Pages 承载空间<br/>
2. 七牛免费 10G 的存储空间存储笔记，我们假定一个文档的使用空间是 1K，那么免费可以容纳 <code>10*1024*1024 = 10,485,760</code>，如果真的到了这个数量级，那么也不需要考虑是否免费了。</p>

<p>所以请大家放心使用。至于安全问题，如果特别敏感的东西，相信你也不会存在这个地方，不过笔者还是做了一些限制，把七牛的 <code>key</code> 存储到了云端。</p>

<!-- more -->


<h2>实现</h2>

<p>实现相对非常简单，使用了免费的 <a href="https://gitee.com/pandao/editor.md">Editor.md</a> 作为 Markdown 的编辑工具。  <br/>
使用 <code>Github Pages</code> 承载编辑器页面，直接使用七牛 <code>JavaScript SDK</code>，同步编辑内容到七牛云空间。</p>

<h2>使用</h2>

<p>访问 <a href="http://mdnote.gettools.wang/">http://mdnote.gettools.wang/</a><br/>
如果带 <code>#codedrinker</code>，先获取当前短链接下面是否有内容，如果有展示，没有的话自动填入 <code>Markdown</code> 语法<br/>
编辑完成以后按 <code>Ctrl+S</code> 或者 <code>Command+S</code>保存</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Commenthub —— 多说、网易云跟帖的替代品]]></title>
    <link href="http://www.majiang.life/blog/octopress-and-hexo-comments-widget/"/>
    <updated>2018-02-19T20:57:35+08:00</updated>
    <id>http://www.majiang.life/blog/octopress-and-hexo-comments-widget</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>“多说”和“网易云跟帖”相继不维护了，每一次给大家带来了希望又带来了失望，于是 <a href="https://github.com/codedrinker/commenthub">Commenthub</a> 出现了。Commenthub 是作者使用免费的服务 Heroku 和 Github Issues 结合起来做的一套开源的评论系统。其灵感源于 Gitment，但是 Gitment 的 Key 和 Secret 都存在浏览器端，这样对于安全也是一个问题，于是作者使用 Heroku 搭建后端服务用于处理业务和存储证书，通过 iframe 实现评论功能。</p>

<!-- more -->


<h2>效果图</h2>

<p><img src="/images/posts/commenthub1.png" alt="Demo" /></p>

<h2>演示地址</h2>

<p><a href="http://commenthub.github.io/">http://commenthub.github.io/</a></p>

<h2>功能介绍</h2>

<p>Commenthub 目前只支持 Github 用户登录评论，同时也只支持 Github 用户为自己的博客添加评论功能。目前 Commenthub 支持 Markdown 语法，表情，手机和PC响应式布局。</p>

<h2>Octopress 接入</h2>

<h3>注册 commenthub 账号</h3>

<p>访问 <a href="http://commenthub.herokuapp.com/">Commenthub官网</a>，点击 Sign up，使用 Github 账号登录成功以后，点击 Set up，填写博客地址。同时记住 ID，后面需要使用。</p>

<h3>配置 config.yml</h3>

<p>在 config.yml 里面填写 commenthub_id，其内容就是上面说的ID，用于标记作者是谁。
<code>
commenthub_id: 3821949
</code></p>

<h3>配置显示位置</h3>

<p>在 <code>_layouts/post.html</code> 的 article 标签下面添加如下代码，用来告诉 Commenthub，在什么地方显示评论功能。
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% if site.commenthub_id and page.comments == true %}
</span><span class='line'>  <span class="nt">&lt;section&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>评论<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;commenthub_thread&quot;</span> <span class="na">aria-live=</span><span class="s">&quot;polite&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>{% endif %}
</span></code></pre></td></tr></table></div></figure></p>

<h3>创建 commenthub.html</h3>

<p>创建 <code>includes/commenthub.html</code>，填入如下内容
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% comment %} Load script if commenthub comments are enabled and <span class="nt">&lt;code&gt;</span>page.comments<span class="nt">&lt;/code&gt;</span> is either empty (index) or set to true {% endcomment %}
</span><span class='line'>{% if site.commenthub_id and page.comments != false %}<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">commenthub_id</span> <span class="o">=</span> <span class="s1">&#39;{{ site.commenthub_id }}&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">commenthub_website</span> <span class="o">=</span> <span class="s1">&#39;{{ site.url }}&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">commenthub_identifier</span> <span class="o">=</span> <span class="s1">&#39;{{ page.url }}&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">commenthub_url</span> <span class="o">=</span> <span class="s1">&#39;{{ site.url }}{{ page.url }}&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">commenthub_title</span> <span class="o">=</span> <span class="s1">&#39;{{ page.title }}&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">dsq</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">dsq</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s1">&#39;text/javascript&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="nx">dsq</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>        <span class="nx">dsq</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="s1">&#39;https://commenthub.herokuapp.com/js/embed.js&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">dsq</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}());</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>{% endif %}
</span></code></pre></td></tr></table></div></figure></p>

<h3>引入 commenthub.html</h3>

<p>在 <code>includes/after_foot.html</code> 里面添加一行如下内容，用于引入 commenthub.html 文件
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% include commenthub.html %}
</span></code></pre></td></tr></table></div></figure></p>

<h3>完成</h3>

<p>这样 Octopress 的配置就结束了，如果配置中遇到问题，可以在当前博客中评论留言，或者到 Github Issue 中留言。</p>

<h2>Hexo 接入</h2>

<p>Hexo 使用的是比较热门的主题 Next。</p>

<h3>注册 commenthub 账号</h3>

<p>同上</p>

<h3>配置 config.yml</h3>

<p>配置 <code>themes/next/_config.yml</code> 文件，在里面的 Disqus 后面配置如下内容
<code>
commenthub:
  enable: true
  id: your_id
  site: your_website_url
</code></p>

<h3>配置显示位置</h3>

<p>在<code>themes/next/layout/_partials/comments.swig</code>里面添加一行代码，记得注意看<code>elseif</code>的位置
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  {% elseif theme.commenthub.enable %}
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;comments&quot;</span> <span class="na">id=</span><span class="s">&quot;comments&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;commenthub_thread&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3>创建 commenthub.swig</h3>

<p>创建新文件<code>themes/next/layout/_third-party/comments/commenthub.swig</code>并贴入如下代码，如下代码主要是用于加载和生成评论的逻辑。
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% if not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname %}
</span><span class='line'>  {% if theme.commenthub.enable %}
</span><span class='line'>      <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">commenthub_id</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;{{</span> <span class="nx">theme</span><span class="p">.</span><span class="nx">commenthub</span><span class="p">.</span><span class="nx">id</span> <span class="p">}}</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">commenthub_website</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;{{</span> <span class="nx">theme</span><span class="p">.</span><span class="nx">commenthub</span><span class="p">.</span><span class="nx">site</span> <span class="p">}}</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">commenthub_identifier</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;{{</span> <span class="nx">page</span><span class="p">.</span><span class="nx">path</span> <span class="p">}}</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">commenthub_url</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;{{</span> <span class="nx">page</span><span class="p">.</span><span class="nx">permalink</span> <span class="p">}}</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">commenthub_title</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;{{</span> <span class="nx">page</span><span class="p">.</span><span class="nx">title</span><span class="o">|</span> <span class="nx">addslashes</span> <span class="p">}}</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">dsq</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">script</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span>
</span><span class='line'>            <span class="nx">dsq</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">text</span><span class="o">/</span><span class="nx">javascript</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span>
</span><span class='line'>            <span class="nx">dsq</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>            <span class="nx">dsq</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="nx">a</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;https://commenthub.herokuapp.com/js/embed.js&quot;</span><span class="o">&gt;</span><span class="nx">https</span><span class="o">:</span><span class="c1">//commenthub.herokuapp.com/js/embed.js&lt;/a&gt;&amp;rsquo;;</span>
</span><span class='line'>            <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">head</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">body</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;)[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">dsq</span><span class="p">);</span>
</span><span class='line'>      <span class="nt">&lt;/script&gt;</span>
</span><span class='line'>  {% endif %}
</span><span class='line'>{% endif %}
</span></code></pre></td></tr></table></div></figure></p>

<h3>引入 commenthub.swig</h3>

<p>在<code>themes/next/layout/_third-party/comments/index.swig</code>文件添加如下代码：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% include <span class="ni">&amp;lsquo;</span>commenthub.swig<span class="ni">&amp;rsquo;</span> %}<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3>完成</h3>

<p>这样 Hexo 的配置就结束了，如果配置中遇到问题，可以在当前博客中评论留言，或者到 Github Issue 中留言。</p>

<h2>建议与反馈</h2>

<p>如果在使用过程中有任何问题欢迎建议和反馈到 <a href="https://github.com/codedrinker/commenthub">Commenthub</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chrome自动生成网页目录插件的编写和使用]]></title>
    <link href="http://www.majiang.life/blog/table-of-contents-sidebar-chrome-extension-introduction/"/>
    <updated>2017-08-13T00:16:06+08:00</updated>
    <id>http://www.majiang.life/blog/table-of-contents-sidebar-chrome-extension-introduction</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>虽然移动设备已经很普遍了，但是大家使用电脑阅读网页的时间还是很长，尤其是做我们这个行业，除了阅读博客，通过网页搜索资料的时间也是比其他行业要多出来很多的。每次遇到特别长的文章的时候，从上到下的翻阅查找重点内容，肉眼的分离段落实在是比较费劲。但是有的网站这方面比较人性化，<code>Hexo</code>的博客系统或者是最近比较火的<code>segmentfault</code>，他们的文章目录就很方便，便于我们快速的定位(如下图)。但是大部分博客或者是贴吧还是没有目录的，于是笔者就突发奇想，自己写一个<code>Chrome</code>的插件，能自动的识别出来文章的目录，于是就有了这篇文章：</p>

<!-- more -->


<p><img src="/images/posts/chrome-extension-segmentfault.png" alt="SegmentFault" /></p>

<h2>效果展示</h2>

<p>如图，简单的展示了一下插件的使用方式。
<img src="/images/posts/chrome-extension-tutorial.gif" alt="Chrome Extension Toturial" /></p>

<h2>怎么快速编写Chrome Extension？</h2>

<p>首先需要的是<code>翻墙</code>，这个应该是<code>攻城狮</code>必备了吧。然后访问<code>Google</code>的官方<a href="https://developer.chrome.com/extensions/getstarted">Get Started</a>文章即可。里面的通过一个具体的实力详解，非常详细。如果想用更简单的办法，直接<code>clone</code>笔者的<a href="https://github.com/codedrinker/table-of-contents-sidebar">Repo</a>，然后修修改改。</p>

<h2>简单描述一下Chrome Extension的目录结构</h2>

<p>如下是笔者插件项目的目录结构，内容很多，我们挑一些重点说。
<img src="/images/posts/chrome-extension-tree.png" alt="Tree" /><br/>
<code>manifest.json</code>是必不可少的，它是插件的入口，包括名字，版本，权限，icon等配置都在这里面。</p>

<p><code>background.js</code>可以是长时间运行在<code>Extension</code>的生性周期里面长时间运行的脚本，用它来管理一些任务或状态非常方便。他可以这样的原因是如下配置：
<code>json manifest.json
"background": {
    "scripts": [
      "background.js"
    ],
    "persistent": true
  }
</code><br/>
<code>app.js</code>是使用插件过程中，网页里面可以执行的<code>js</code>文件，原因如下配置：
<code>json manifest.json
"content_scripts": [
    {
      "css": [
        "table-of-contents-sidebar.css"
      ],
      "js": [
        "app.js"
      ],
      "matches": [
        "http://*/*",
        "https://*/*"
      ]
    }
  ]
</code>
<code>options.html</code>是设置界面，点击插件右键的<code>Options</code>出现的界面。因为<code>manifest.json</code>里面的<code>options_ui</code>配置了。
<code>json manifest.json
"options_ui": {
    "page": "options.html",
    "chrome_style": true,
    "open_in_tab": true
  }
</code>
<code>table-of-contents-sidebar.css</code>文件是插件的样式文件，如果需要在修改网页样式的时候使用，需要通过<code>chrome.extension.getURL("table-of-contents-sidebar.css");</code>的方式获取到他的绝对路径，然后写到页面里面使用。<br/>
<code>options.css</code>这个是设置页面需要使用的样式，不需要上面那么复杂，因为配置页面就是直接的网页了，可以直接引用：
<figure class='code'><figcaption><span>options.html</p></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;options.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;options.css&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>
其他的都是一起图片或者是样式资源，没有特别要说的，只要路径对应好就可以了。</p>

<h2>插件的实现思路</h2>

<p>1.采用遍历h<em>标签作为菜单<br/>
2.使用元素距离屏幕的垂直距离来过滤无用标签，笔者初步认为，h</em>标签高度递增说明一直是一个<code>Section</code>里面的标签，如果有变化，说明已经不对了，所以通过这个方式过滤一部分无用标签。<br/>
3.通过原始元素的<code>ID</code>定位锚，但是如果原始元素没有，自动生成一个<code>UUID</code>绑定到原始元素，方便定位。<br/>
4.使用获取当前页面的<code>domain</code>实现黑名单拦截功能，过滤掉一些使用者不希望看到<code>目录</code>的页面。
5.使用<code>mouseover</code>和<code>mouseout</code>事件实现鼠标移走就自动消失，最大限度的不要遮挡阅读内容。<br/>
6.使用<code>LocalStorage</code>实现保持用户搜索的设置，包括黑名单拦截。这样保证重启浏览器配置不会丢失。</p>

<h2>踩过的坑</h2>

<p>1.<code>Extension</code>使用的<code>icon</code>不能大于<code>190px</code>，所以再设置<code>broswer_action</code>或者是<code>content_menus</code>的时候一定要控制<code>icon</code>大小，因为大小超过以后他不会报错，只是不显示而已。<br/>
2.如果是页面想访问<code>Extension</code>资源，需要配置<code>web_accessible_resources</code>访问权限：
<code>json manifest.json
"web_accessible_resources": [
    "images/*",
    "table-of-contents-sidebar.css",
    "options.html",
    "themes/*"
  ]
</code>
3.修改完代码以后，必须到<code>chrome://extensions/</code>页面强制刷新，不然不会更新。  <br/>
4.上传第一个<code>Chrome Extension</code>需要交纳<code>7$</code>费用，官方说这是为了验证你的合法性。<br/>
5.如果更新的<code>Plugin</code>到商店的话，已经安装的用户会在5小时左右自动更新。<code>Chrome</code>的默认配置是5小时更新一次配置。</p>

<h2>下载和使用</h2>

<p>直接在<code>Chrome Webstore</code>搜索<code>Table of contents sidebar</code>下载，或者直接点击如下地址<a href="https://chrome.google.com/webstore/detail/table-of-contents-sidebar/ohohkfheangmbedkgechjkmbepeikkej">https://chrome.google.com/webstore/detail/table-of-contents-sidebar/ohohkfheangmbedkgechjkmbepeikkej</a>安装。操作是非常简单的，所以就不具体说了，如果需要讲解，可以参照插件下载页面的视频(YouTube)。</p>

<h2>自定义样式</h2>

<p>由于笔者是后端出身，虽然编码前端没问题，但是对于页面美观上面还是差一些。于是笔者提供了一个用户可以简单的编写样式的方式，这样如果想自己编写一个样式并且应用到<code>Chrome Extension</code>的同学，可以按照如下操作。  <br/>
1.第一步，<code>fork</code><a href="https://github.com/codedrinker/table-of-contents-sidebar">项目</a>代码，<code>clone</code>到自己本地。<br/>
2.第二步，<code>load</code>项目到<code>Chrome</code>，需要在开发模式才能<code>load</code>本地的包。<br/>
3.第三步，在<code>themes</code>目录添加你自定义样式文件，比如<code>darcula.css</code>。里面的内容仿照<code>table-of-contents-sidebar.css</code>编写即可，里面的元素很清楚。<br/>
4.第四步，在<code>options.html</code>里面找到<code>theme</code>的<code>select</code>，添加一个<code>option</code>如下即可：
<code>html options.html
&lt;option value="themes/darcula.css"&gt;Darcula&lt;/option&gt;
</code>
5.第五步，提交一个<code>Pull Request</code>，我会尽快<code>Accept</code>。
这样你自定义的样式就可以展示在设置页面了。
<img src="/images/posts/chrome-extension-theme.png" alt="Chrome Extension Theme" /></p>

<h2>使用愉快</h2>

<p>希望这个插件对大家有用，如果有任何问题，可以提<a href="https://github.com/codedrinker/table-of-contents-sidebar/issues">Issue</a>到<code>GitHub</code>。</p>
]]></content>
  </entry>
  
</feed>
