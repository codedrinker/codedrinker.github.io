<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[王春磊的博客]]></title>
  <link href="http://codedrinker.github.io/atom.xml" rel="self"/>
  <link href="http://codedrinker.github.io/"/>
  <updated>2016-12-15T09:56:49+08:00</updated>
  <id>http://codedrinker.github.io/</id>
  <author>
    <name><![CDATA[Chunlei Wang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vagrant 私有开发环境搭建]]></title>
    <link href="http://codedrinker.github.io/blog/2016/12/15/set-up-vagrant-environment/"/>
    <updated>2016-12-15T01:28:27+08:00</updated>
    <id>http://codedrinker.github.io/blog/2016/12/15/set-up-vagrant-environment</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>服务器端开发工程师的一个痛点就是各种搭建环境，尤其是对于我们这种特别爱捯饬技术，搭建环境，升级应用版本的这类人。这样除了让我们忍受搭建各种版本的环境的繁琐兼容问题，还让自己的开发机变得越来越臃肿，为此本文介绍了一种使用<code>Vagrant</code>搭建一套集成的开发环境(镜像)的方案，不仅可以让团队开发人员的环境保持一致，同时使得开发机保持瘦身。<br/>
当然也有缺点，不许要做好数据的保密性，不能让所有的开发人员的镜像都有一些生产数据。<br/>
下面我们就直接进入正题，搭建一个可以升级的本地环境。</p>

<h2>安装vagrant和virtual box</h2>

<p>访问<code>Vagrant</code>官网(<a href="https://www.vagrantup.com/">https://www.vagrantup.com/</a>)，下载并安装。<br/>
访问<code>VirtualBox</code>官网(<a href="https://www.virtualbox.org/">https://www.virtualbox.org/</a>)，下载并安装。</p>

<h2>安装开发环境</h2>

<p><code>Vagrant</code>的基本单元叫做box，我们可以理解为镜像，首先我们需要添加一个<code>Vagrant</code>公开的镜像到我们本地，用来搭建环境。<br/>
我选择的是一个ubuntu镜像，下面的操作我们可以理解为下载镜像。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant box add hashicorp/precise64</span></code></pre></td></tr></table></div></figure>


<p>提示选择哪一种方式，我们这里选择的是virtualbox，我们刚刚已经安装了。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>box: URL: https://atlas.hashicorp.com/hashicorp/precise64
</span><span class='line'>This box can work with multiple providers! The providers that it
</span><span class='line'>can work with are listed below. Please review the list and choose
</span><span class='line'>the provider you will be working with.
</span><span class='line'>
</span><span class='line'>1) hyperv
</span><span class='line'>2) virtualbox
</span><span class='line'>3) vmware_fusion
</span><span class='line'>
</span><span class='line'>Enter your choice: 2</span></code></pre></td></tr></table></div></figure>


<p>初始化本地开发环境，我们可以理解为安装镜像。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant init hashicorp/precise64</span></code></pre></td></tr></table></div></figure>


<p>运行本地开发环境</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant up</span></code></pre></td></tr></table></div></figure>


<p>ssh到本地开发环境</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant ssh</span></code></pre></td></tr></table></div></figure>


<p>如果能进入刚才安装的系统，那么说明我们安装成功。因为设置了免密钥登录，所以直接输入就可以登录。</p>

<blockquote><p><strong>注意：</strong>切记，是在你的<code>Vagrantfile</code>目录执行<code>Vagrant</code>相关命令),
如果需要关闭系统，可以输入如下命令</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant halt</span></code></pre></td></tr></table></div></figure>


<blockquote><p><strong>参考文档：</strong> <a href="https://www.vagrantup.com/docs/getting-started/">https://www.vagrantup.com/docs/getting-started/</a></p></blockquote>

<h2>配置开发环境</h2>

<p>具体的搭建环境根据自身的项目决定，我这里只通过安装tomcat举例。
官方网站下载tomcat，放到指定目录，我这里直接放在了我的<code>~/</code>home目录。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget http://apache.fayea.com/tomcat/tomcat-8/v8.5.9/bin/apache-tomcat-8.5.9.tar.gz</span></code></pre></td></tr></table></div></figure>


<p>解压tomcat</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tar -zxvf apache-tomcat-8.5.9.tar.gz</span></code></pre></td></tr></table></div></figure>


<p>为了让我们本地开发机也能访问到<code>Vagrant</code>里面的tomcat，我们需要配置转发端口。需要在<code>config.vm.box = "hashicorp/precise64"</code>下面添加：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config.vm.network "forwarded_port", guest: 8080, host: 8080</span></code></pre></td></tr></table></div></figure>


<p>修改了配置文件以后，reload才能生效</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant reload</span></code></pre></td></tr></table></div></figure>


<p>运行tomcat</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sh ~/apache-tomcat-8.5.9/bin/catalina.sh start</span></code></pre></td></tr></table></div></figure>


<p>在我们开发机打开浏览器，输入<code>http://localhost:8080</code>，我们就能看到Tomcat的欢迎页了，配置环境成功。</p>

<blockquote><p><strong>参考文档：</strong> <a href="https://www.vagrantup.com/docs/getting-started/networking.html">https://www.vagrantup.com/docs/getting-started/networking.html</a></p></blockquote>

<h2>打包开发环境</h2>

<p>截止到目前假设我们自己的开发环境已经搭建完成，那么我们需要把搭建好的开发环境分发给其他开发人员。这个时候就需要打包一个开发环境，主要就是把我们已经处理好的开发环境打包成一个*.box文件，这样便可以使用<code>Vagrant</code>进行安装了。
在<code>Vagrant</code>目录输入如下命令打包镜像:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant package --output mermaid.box --vagrantfile Vagrantfile</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>&ndash;output：</strong>打包的名字，做程序需要美人的陪伴，于是我起了一个响亮的名字;</li>
<li><strong>&ndash;vagrantfile：</strong>设置这个参数以后，就可以把刚才我配置到<code>Vagrantfile</code>里面的配置打近包里面，这样其他开发人员下载镜像的时候就不需要重新配置了。</li>
</ul>


<p>这个时间有点长，我们慢慢的等他结束。</p>

<blockquote><p><strong>参考文档：</strong> <a href="https://www.vagrantup.com/docs/cli/package.html">https://www.vagrantup.com/docs/cli/package.html</a></p></blockquote>

<h2>搭建私有镜像仓库并发布镜像</h2>

<p>我们要找一个大家都能下载并且外人不能访问的地方，所以我们选择搭建一个私有的镜像仓库。我在内网找了一个linux的服务器，IP地址是<code>192.168.1.137</code>，方便下文我们对应。在上面安装一个Nginx，方便我们可以直接通过URL访问相应的资源。
在Nginx的根目录，创建vagrant文件夹，在vagrant文件夹下面在创建boxes文件夹。在vagrant目录添加mermaid.json文件，用于存放box的metadata信息。同时把我们刚才的mermaid.box放到boxes下面，并命名为mermaid.0.1.0.box，以便稍后的升级测试。
具体目录结构如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>work@dev:/var/www/html$ tree
</span><span class='line'>.
</span><span class='line'>|-- index.nginx-debian.html
</span><span class='line'>`-- vagrant
</span><span class='line'>    |-- boxes
</span><span class='line'>    |   |-- mermaid.0.1.0.box
</span><span class='line'>    `-- mermaid.json</span></code></pre></td></tr></table></div></figure>


<p>mermaid.json  里面具体内容如下:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "name": "mermaid",
</span><span class='line'>  "description": "mermaid dev environment",
</span><span class='line'>  "versions": [
</span><span class='line'>    {
</span><span class='line'>      "version": "0.1.0",
</span><span class='line'>      "providers": [
</span><span class='line'>        {
</span><span class='line'>          "name": "virtualbox",
</span><span class='line'>          "url": "http://192.168.1.137/vagrant/boxes/mermaid.0.1.0.box",
</span><span class='line'>          "checksum_type": "sha1",
</span><span class='line'>          "checksum": "3badb9acb07992938d6415e67a8291d60f3aafe9"
</span><span class='line'>        }
</span><span class='line'>      ]
</span><span class='line'>    }
</span><span class='line'>  ]
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>基本配置都比较容易理解，注意的是checksum，需要把box上传到服务器的时候，使用
<code>sha1sum boxes/mermaid.0.1.0.box</code>生成一下checksum值。
配置都完成之后，我们测试访问<code>http://192.168.1.137/vagrant/mermaid.json</code>ok，那么表示我们配置成功。</p>

<blockquote><p><strong>参考文档：</strong> <a href="http://softwaretester.info/create-private-vagrant-box-repository/">http://softwaretester.info/create-private-vagrant-box-repository/</a></p></blockquote>

<h2>通过私有镜像仓库安装开发环境</h2>

<p>和最开始我们再<code>Vagrant</code>公有仓库安装的方式类似，首先我们准备一个全新的目录，我是使用的这个目录<code>~/mermaid</code>。
首先指定我们的私有仓库地址，添加一个镜像到本地。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant box add mermaid http://192.168.1.137/vagrant/mermaid.json</span></code></pre></td></tr></table></div></figure>


<p>出现如下提示，说明我们在正确的路上，如果是局域网这个步骤会很快。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>==&gt; box: Loading metadata for box 'http://192.168.1.137/vagrant/mermaid.json'
</span><span class='line'>==&gt; box: Adding box 'mermaid' (v0.1.0) for provider: virtualbox
</span><span class='line'>    box: Downloading: http://192.168.1.137/vagrant/boxes/mermaid.0.1.0.box
</span><span class='line'>    box: Calculating and comparing box checksum...
</span><span class='line'>==&gt; box: Successfully added box 'mermaid' (v0.1.0) for 'virtualbox'!</span></code></pre></td></tr></table></div></figure>


<p>我们可以通过<code>vagrant box list</code>命令看一下是否安装成功</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant box list
</span><span class='line'>mermaid        (virtualbox, 0.1.0)</span></code></pre></td></tr></table></div></figure>


<p>由此可以看出来我们安装成功，那么进行下一步，安装镜像</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant init mermaid</span></code></pre></td></tr></table></div></figure>


<p>重复之前的操作，运行开发环境，并ssh到开发环境</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant up</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant ssh</span></code></pre></td></tr></table></div></figure>


<p>运行Tomcat</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sh ~/apache-tomcat-8.5.9/bin/catalina.sh start</span></code></pre></td></tr></table></div></figure>


<p>在开发机本地访问<code>http://localhost:8080</code>，看到欢迎页，说明我们本地安装成功啦，还不是庆祝的时候，还没有结束，我们接下来看看怎么升级每一个人的镜像。</p>

<blockquote><p><strong>参考文档：</strong> <a href="http://softwaretester.info/create-private-vagrant-box-repository/">http://softwaretester.info/create-private-vagrant-box-repository/</a></p></blockquote>

<h2>添加新版本镜像到私有库</h2>

<p>这个功能主要是我们对开发环境有了修改，需要其他的开发人员同时更新到最新的环境。
这次我们为开发环境安装一个Nginx，并且设置开机启动(具体步骤不累述)，然后配置<code>Vagrantfile</code>，添加80端口共享：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config.vm.network "forwarded_port", guest: 80, host: 80</span></code></pre></td></tr></table></div></figure>


<p>按照<code>打包开发环境</code>步骤，重新打包一个新的mermaid.0.1.1.box上传到mermaid.0.1.0.box相同目录，如下图:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>work@dev:/var/www/html$ tree
</span><span class='line'>.
</span><span class='line'>|-- index.nginx-debian.html
</span><span class='line'>`-- vagrant
</span><span class='line'>    |-- boxes
</span><span class='line'>    |   |-- mermaid.0.1.0.box
</span><span class='line'>    |   `-- mermaid.0.1.1.box
</span><span class='line'>    `-- mermaid.json</span></code></pre></td></tr></table></div></figure>


<p>修改mermaid.json文件，添加新的版本</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "name": "mermaid",
</span><span class='line'>  "description": "mermaid dev environment",
</span><span class='line'>  "versions": [
</span><span class='line'>    {
</span><span class='line'>      "version": "0.1.0",
</span><span class='line'>      "providers": [
</span><span class='line'>        {
</span><span class='line'>          "name": "virtualbox",
</span><span class='line'>          "url": "http://192.168.1.137/vagrant/boxes/mermaid.0.1.0.box",
</span><span class='line'>          "checksum_type": "sha1",
</span><span class='line'>          "checksum": "3badb9acb07992938d6415e67a8291d60f3aafe9"
</span><span class='line'>        }
</span><span class='line'>      ]
</span><span class='line'>    },
</span><span class='line'>    {
</span><span class='line'>      "version": "0.1.1",
</span><span class='line'>      "providers": [
</span><span class='line'>        {
</span><span class='line'>          "name": "virtualbox",
</span><span class='line'>          "url": "http://192.168.1.137/vagrant/boxes/mermaid.0.1.1.box",
</span><span class='line'>          "checksum_type": "sha1",
</span><span class='line'>          "checksum": "99e6d7fc44cccabdfc6ed9ce178ca65fd9dcbac8"
</span><span class='line'>        }
</span><span class='line'>      ]
</span><span class='line'>    }
</span><span class='line'>  ]
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>配置完成。</p>

<blockquote><p><strong>参考文档：</strong> <a href="http://softwaretester.info/create-private-vagrant-box-repository/">http://softwaretester.info/create-private-vagrant-box-repository/</a></p></blockquote>

<h2>更新镜像</h2>

<p>进入mermaid目录，输入:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant box outdated</span></code></pre></td></tr></table></div></figure>


<p>提示显示已经有0.1.1版本，可以更新啦，那么我们直接输入如下命令更新，切记需要<code>vagrant halt</code>关闭虚拟机。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>A newer version of the box 'mermaid' is available! You currently
</span><span class='line'>have version '0.1.0'. The latest is version '0.1.1'. Run
</span><span class='line'>`vagrant box update` to update.</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant box update</span></code></pre></td></tr></table></div></figure>


<p>更新以后，访问localhost，出现<code>It’s work</code>字样。
至此已经全部完成。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[这是一个开始，也是一个总结]]></title>
    <link href="http://codedrinker.github.io/blog/2015/01/10/begininng-and-summary/"/>
    <updated>2015-01-10T21:27:00+08:00</updated>
    <id>http://codedrinker.github.io/blog/2015/01/10/begininng-and-summary</id>
    <content type="html"><![CDATA[<p>这是一个开始，是因为这今天开始写博客，确切的说是开始认真的写博客，之前在<a href="http://blog.csdn.net/wclxyn">CSDN</a>写过一些博客，
大概是在大二的时候开始写，不过感觉那些更像是笔记，现在呢，变成读后感了，
我觉得开始一点一滴的记录一下自己的行军图，也是一个总结，
是认真的总结一下自己过去走过的这段路程，反思一下自己，展望一下未来。</p>

<h1>昨天</h1>

<p>我还在学校也写Java：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloWorld</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">args</span><span class="o">[])</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;HelloWorld&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>大学的生活的还历历在目，仿佛就在昨天。第一次接触编程语言便是JAVA，现在也不知道那是不是偶然，刚刚上大学的我盲目的加入各种社团，恰逢“**大学网络中心”在
面向全校学生招新，我就怀揣着好奇心去了。也就是那次，我开始喜欢每天面对代码充实的大学生活，也是那时开始一直没有停下来。</p>

<p>在那里有我的伙伴，有做.NET的小马，做PHP的戈壁，做JAVA的三哥，做前端的大悦和大玉，我们一起经历冬天没有暖气夏天没有空调的办公室，
一起去体验在荒野山村做完项目回来打不到的的心情，</p>

<h1>今天</h1>

<p>我在公司写Scala：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">object</span> <span class="nc">HelloWorld</span> <span class="k">extends</span> <span class="nc">App</span><span class="o">{</span>
</span><span class='line'>    <span class="n">println</span><span class="o">(</span><span class="s">&quot;HelloWorld&quot;</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>明天</h1>

<p>我会去写groovy：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">println</span> <span class="s2">&quot;Hello World&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
